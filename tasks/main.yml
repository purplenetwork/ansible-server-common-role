---
- name: "Add multiverse repo"
  apt_repository:
    repo: "{{item}}"
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
  become: yes

- block:
    - name: Remove the EOL message of the day if one exists.
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/update-motd.d/99-esm
        - /run/motd.dynamic
      become: yes

    - name: Create /etc/apt/apt.conf.d/local
      file:
        path: /etc/apt/apt.conf.d/local
        state: touch
      become: yes

    - name: Add apt config used to workaround do-release-upgrade
      lineinfile:
        path: /etc/apt/apt.conf.d/local
        line: 'DPkg::options { "--force-confdef"; "--force-confnew"; }'
      become: yes
      
    - name: Upgrade all packages to the latest version
      apt: update_cache=yes upgrade=dist autoclean=yes
      become: yes

    - name: Ensure update-manager-core is installed.
      apt: name=update-manager-core state=present
      become: yes

    - name: Reboot the server.
      command: /sbin/reboot
      become: yes

    - name: Wait for server to reboot.
      wait_for:
        host: "{{ ansible_ssh_host }}"
        port: 22
        state: started
      connection: local
      become: no

    - name: Run do-release-upgrade non-interactively.
      command: do-release-upgrade -f DistUpgradeViewNonInteractive
      become: yes

    - name: Reboot the server.
      command: /sbin/reboot
      become: yes

    - name: Wait for server to reboot.
      wait_for:
        host: "{{ ansible_ssh_host }}"
        port: 22
        state: started
      connection: local
      become: no

    - name: Upgrade all packages to the latest version
      apt: update_cache=yes upgrade=dist autoclean=yes
      become: yes
      
    - name: Reboot the server.
      command: /sbin/reboot
      become: yes

    - name: Wait for server to reboot.
      wait_for:
        host: "{{ ansible_ssh_host }}"
        port: 22
        state: started
      connection: local
      become: no

  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version != '16.04'

- name: Remove apt config used to workaround do-release-upgrade
  file:
    path: /etc/apt/apt.conf.d/local
    state: absent
  become: yes
  tags:
    - upgrade

- name: Safe upgrade all packages to the latest version
  apt: update_cache=yes upgrade=safe autoclean=yes
  become: true
  tags:
    - upgrade

- name: "Check if a reboot is required"
  register: file
  stat: path=/var/run/reboot-required get_md5=no
  become: yes
  tags:
    - upgrade

- name: "Reboot"
  command: /sbin/reboot
  when: file.stat.exists == true
  become: yes
  tags:
    - upgrade

- name: Wait for server to reboot.
  wait_for:
    host: "{{ ansible_ssh_host }}"
    port: 22
    state: started
  connection: local
  become: no

- name: "Validate timezone variable"
  stat: path=/usr/share/zoneinfo/{{ timezone }}
  register: timezone_path
  changed_when: false

- name: "Explain timezone error"
  fail: msg="{{ timezone }} is not a valid timezone. For a list of valid timezones, check https://php.net/manual/en/timezones.php"
  when: not timezone_path.stat.exists

- name: "Get current timezone"
  command: cat /etc/timezone
  register: current_timezone
  changed_when: false

- name: "Set timezone"
  command: timedatectl set-timezone {{ timezone }}
  when: current_timezone.stdout != timezone
  become: yes

- name: "Set the hostname in /etc/hostname"
  shell: echo {{ hostname }} > /etc/hostname
  when: hostname is defined

- name: "Set the hostname"
  shell: hostname {{ hostname }}
  when: hostname is defined

- name: "Update /etc/hosts"
  lineinfile: dest=/etc/hosts regexp='^127\.0\.0\.1' line='127.0.0.1 localhost {{ hostname }}' owner=root group=root mode=0644
  when: hostname is defined

- name: "Install common packages"
  apt: name={{ item }} state=present
  become: yes
  with_items:
    - python-software-properties
    - python-pip
    - htop
    - ncdu
    - wget
    - curl
    - mysql-client
    - python-mysqldb
    - acl
    - zip
    - unzip
